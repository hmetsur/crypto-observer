// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/currency/add": {
            "post": {
                "description": "Начать отслеживать цену криптовалюты",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "Add a cryptocurrency to watchlist",
                "parameters": [
                    {
                        "description": "Symbol and period",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AddCurrencyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/currency/price": {
            "get": {
                "description": "Получить цену валюты на момент времени",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "Get price by symbol and timestamp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Symbol",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Timestamp (unix)",
                        "name": "timestamp",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PriceResponseonse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/currency/remove": {
            "post": {
                "description": "Прекратить отслеживать цену криптовалюты",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "Remove a cryptocurrency from watchlist",
                "parameters": [
                    {
                        "description": "Symbol",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RemoveCurrencyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AddCurrencyRequest": {
            "type": "object",
            "properties": {
                "period": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.PriceResponseonse": {
            "type": "object",
            "properties": {
                "coin": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "model.RemoveCurrencyRequest": {
            "type": "object",
            "properties": {
                "symbol": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Crypto Observer API",
	Description:      "Микросервис для мониторинга цен криптовалют",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
